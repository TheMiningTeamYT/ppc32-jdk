/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jdk_jfr_internal_JVM */

#ifndef _Included_jdk_jfr_internal_JVM
#define _Included_jdk_jfr_internal_JVM
#ifdef __cplusplus
extern "C" {
#endif
#undef jdk_jfr_internal_JVM_RESERVED_CLASS_ID_LIMIT
#define jdk_jfr_internal_JVM_RESERVED_CLASS_ID_LIMIT 400LL
/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    registerNatives
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_registerNatives
  (JNIEnv *, jclass);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    beginRecording
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_beginRecording
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    counterTime
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_jdk_jfr_internal_JVM_counterTime
  (JNIEnv *, jclass);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    emitEvent
 * Signature: (JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_jfr_internal_JVM_emitEvent
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    endRecording
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_endRecording
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getAllEventClasses
 * Signature: ()Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_jdk_jfr_internal_JVM_getAllEventClasses
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getUnloadedEventClassCount
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_jdk_jfr_internal_JVM_getUnloadedEventClassCount
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getClassId
 * Signature: (Ljava/lang/Class;)J
 */
JNIEXPORT jlong JNICALL Java_jdk_jfr_internal_JVM_getClassId
  (JNIEnv *, jclass, jclass);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getClassIdNonIntrinsic
 * Signature: (Ljava/lang/Class;)J
 */
JNIEXPORT jlong JNICALL Java_jdk_jfr_internal_JVM_getClassIdNonIntrinsic
  (JNIEnv *, jclass, jclass);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getPid
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jdk_jfr_internal_JVM_getPid
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getStackTraceId
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_jdk_jfr_internal_JVM_getStackTraceId
  (JNIEnv *, jobject, jint);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getThreadId
 * Signature: (Ljava/lang/Thread;)J
 */
JNIEXPORT jlong JNICALL Java_jdk_jfr_internal_JVM_getThreadId
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getTicksFrequency
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_jdk_jfr_internal_JVM_getTicksFrequency
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    log
 * Signature: (IILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_log
  (JNIEnv *, jclass, jint, jint, jstring);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    subscribeLogLevel
 * Signature: (Ljdk/jfr/internal/LogTag;I)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_subscribeLogLevel
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    retransformClasses
 * Signature: ([Ljava/lang/Class;)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_retransformClasses
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setEnabled
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setEnabled
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setFileNotification
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setFileNotification
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setGlobalBufferCount
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setGlobalBufferCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setGlobalBufferSize
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setGlobalBufferSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setMemorySize
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setMemorySize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setMethodSamplingInterval
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setMethodSamplingInterval
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setOutput
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setOutput
  (JNIEnv *, jobject, jstring);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setForceInstrumentation
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setForceInstrumentation
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setSampleThreads
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setSampleThreads
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setCompressedIntegers
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setCompressedIntegers
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setStackDepth
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setStackDepth
  (JNIEnv *, jobject, jint);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setStackTraceEnabled
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setStackTraceEnabled
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setThreadBufferSize
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setThreadBufferSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setThreshold
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_jfr_internal_JVM_setThreshold
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    storeMetadataDescriptor
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_storeMetadataDescriptor
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getAllowedToDoEventRetransforms
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_jfr_internal_JVM_getAllowedToDoEventRetransforms
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    createJFR
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_jfr_internal_JVM_createJFR
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    destroyJFR
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_jfr_internal_JVM_destroyJFR
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    isAvailable
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_jfr_internal_JVM_isAvailable
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getTimeConversionFactor
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_jdk_jfr_internal_JVM_getTimeConversionFactor
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getTypeId
 * Signature: (Ljava/lang/Class;)J
 */
JNIEXPORT jlong JNICALL Java_jdk_jfr_internal_JVM_getTypeId
  (JNIEnv *, jobject, jclass);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getEventWriter
 * Signature: ()Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_jdk_jfr_internal_JVM_getEventWriter
  (JNIEnv *, jclass);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    newEventWriter
 * Signature: ()Ljdk/jfr/internal/EventWriter;
 */
JNIEXPORT jobject JNICALL Java_jdk_jfr_internal_JVM_newEventWriter
  (JNIEnv *, jclass);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    flush
 * Signature: (Ljdk/jfr/internal/EventWriter;II)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_jfr_internal_JVM_flush
  (JNIEnv *, jclass, jobject, jint, jint);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setRepositoryLocation
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_setRepositoryLocation
  (JNIEnv *, jobject, jstring);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    abort
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_abort
  (JNIEnv *, jobject, jstring);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    addStringConstant
 * Signature: (ZJLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_jfr_internal_JVM_addStringConstant
  (JNIEnv *, jclass, jboolean, jlong, jstring);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    getEpochAddress
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_jdk_jfr_internal_JVM_getEpochAddress
  (JNIEnv *, jobject);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    uncaughtException
 * Signature: (Ljava/lang/Thread;Ljava/lang/Throwable;)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_uncaughtException
  (JNIEnv *, jobject, jobject, jthrowable);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    setCutoff
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_jfr_internal_JVM_setCutoff
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    emitOldObjectSamples
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_jdk_jfr_internal_JVM_emitOldObjectSamples
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     jdk_jfr_internal_JVM
 * Method:    shouldRotateDisk
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_jfr_internal_JVM_shouldRotateDisk
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
